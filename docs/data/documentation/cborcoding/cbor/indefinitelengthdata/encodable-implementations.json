{"variants":[{"paths":["\/documentation\/cborcoding\/cbor\/indefinitelengthdata\/encodable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/CBORCoding\/documentation\/CBORCoding\/CBOR\/IndefiniteLengthData\/Encodable-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/CBORCoding\/documentation\/CBORCoding\/CBOR\/IndefiniteLengthData\/encode(to:)"],"generated":true}],"kind":"article","metadata":{"modules":[{"name":"CBORCoding"}],"role":"collectionGroup","title":"Encodable Implementations"},"hierarchy":{"paths":[["doc:\/\/CBORCoding\/documentation\/CBORCoding","doc:\/\/CBORCoding\/documentation\/CBORCoding\/CBOR\/IndefiniteLengthData"],["doc:\/\/CBORCoding\/documentation\/CBORCoding","doc:\/\/CBORCoding\/documentation\/CBORCoding\/CBOR","doc:\/\/CBORCoding\/documentation\/CBORCoding\/CBOR\/IndefiniteLengthData"]]},"references":{"doc://CBORCoding/documentation/CBORCoding/CBOR/IndefiniteLengthData":{"role":"symbol","title":"CBOR.IndefiniteLengthData","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndefiniteLengthData"}],"abstract":[{"type":"text","text":"CBOR supports byte data whose length isn’t defined at the time of encoding. This"},{"type":"text","text":" "},{"type":"text","text":"is achieved by encoding definite length “chunks” of byte data wrapped in a byte"},{"type":"text","text":" "},{"type":"text","text":"data header specifying indefinite length. "},{"type":"codeVoice","code":"IndefiniteLengthData"},{"type":"text","text":" provides"},{"type":"text","text":" "},{"type":"text","text":"support for encoding byte data in this way. This may be useful for sending to"},{"type":"text","text":" "},{"type":"text","text":"decoders that expect byte data lengths to be undefined."}],"identifier":"doc:\/\/CBORCoding\/documentation\/CBORCoding\/CBOR\/IndefiniteLengthData","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IndefiniteLengthData"}],"url":"\/documentation\/cborcoding\/cbor\/indefinitelengthdata"},"doc://CBORCoding/documentation/CBORCoding/CBOR":{"role":"symbol","title":"CBOR","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBOR"}],"abstract":[{"type":"text","text":"A top level type for encapsulating types specific to the CBOR specification"}],"identifier":"doc:\/\/CBORCoding\/documentation\/CBORCoding\/CBOR","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CBOR"}],"url":"\/documentation\/cborcoding\/cbor"},"doc://CBORCoding/documentation/CBORCoding":{"role":"collection","title":"CBORCoding","abstract":[{"type":"text","text":"A simple library for encoding and decoding "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" types to and from CBOR encoded objects."}],"identifier":"doc:\/\/CBORCoding\/documentation\/CBORCoding","kind":"symbol","type":"topic","url":"\/documentation\/cborcoding"},"doc://CBORCoding/documentation/CBORCoding/CBOR/IndefiniteLengthData/encode(to:)":{"role":"symbol","title":"encode(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[],"identifier":"doc:\/\/CBORCoding\/documentation\/CBORCoding\/CBOR\/IndefiniteLengthData\/encode(to:)","kind":"symbol","type":"topic","url":"\/documentation\/cborcoding\/cbor\/indefinitelengthdata\/encode(to:)"}}}